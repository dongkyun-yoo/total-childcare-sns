#!/bin/bash

# ACTCS Í∞úÎ∞ú ÌôòÍ≤Ω ÏÑ§Ï†ï Ïä§ÌÅ¨Î¶ΩÌä∏
# AI for Child Total Care Solution Development Environment Setup

set -e  # ÏóêÎü¨ Î∞úÏÉù Ïãú Ïä§ÌÅ¨Î¶ΩÌä∏ Ï§ëÎã®

echo "üöÄ ACTCS Í∞úÎ∞ú ÌôòÍ≤Ω ÏÑ§Ï†ïÏùÑ ÏãúÏûëÌï©ÎãàÎã§..."

# ÏÉâÏÉÅ Ï†ïÏùò
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Î°úÍ∑∏ Ìï®Ïàò
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Ïö¥ÏòÅÏ≤¥Ï†ú ÌôïÏù∏
detect_os() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        OS="macos"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        OS="linux"
    elif [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
        OS="windows"
    else
        OS="unknown"
    fi
    log_info "Operating System: $OS"
}

# Node.js ÏÑ§Ïπò ÌôïÏù∏ Î∞è ÏÑ§Ïπò
install_nodejs() {
    log_info "Node.js ÏÑ§ÏπòÎ•º ÌôïÏù∏Ìï©ÎãàÎã§..."
    
    if command -v node &> /dev/null; then
        NODE_VERSION=$(node --version)
        log_success "Node.jsÍ∞Ä Ïù¥ÎØ∏ ÏÑ§ÏπòÎêòÏñ¥ ÏûàÏäµÎãàÎã§: $NODE_VERSION"
        
        # Node.js 18+ Î≤ÑÏ†Ñ ÌôïÏù∏
        NODE_MAJOR_VERSION=$(echo $NODE_VERSION | cut -d'.' -f1 | sed 's/v//')
        if [ "$NODE_MAJOR_VERSION" -lt 18 ]; then
            log_warning "Node.js 18+ Î≤ÑÏ†ÑÏù¥ ÌïÑÏöîÌï©ÎãàÎã§. ÏóÖÍ∑∏Î†àÏù¥ÎìúÎ•º Í∂åÏû•Ìï©ÎãàÎã§."
        fi
    else
        log_warning "Node.jsÍ∞Ä ÏÑ§ÏπòÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§."
        
        if [[ "$OS" == "macos" ]]; then
            if command -v brew &> /dev/null; then
                log_info "HomebrewÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Node.jsÎ•º ÏÑ§ÏπòÌï©ÎãàÎã§..."
                brew install node
            else
                log_error "HomebrewÍ∞Ä ÏÑ§ÏπòÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§. https://nodejs.orgÏóêÏÑú ÏàòÎèô ÏÑ§ÏπòÌïòÏÑ∏Ïöî."
                exit 1
            fi
        elif [[ "$OS" == "linux" ]]; then
            log_info "NodeSource repositoryÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Node.jsÎ•º ÏÑ§ÏπòÌï©ÎãàÎã§..."
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs
        else
            log_error "Ïù¥ Ïö¥ÏòÅÏ≤¥Ï†úÏóêÏÑúÎäî ÏûêÎèô ÏÑ§ÏπòÍ∞Ä ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§. https://nodejs.orgÏóêÏÑú ÏàòÎèô ÏÑ§ÏπòÌïòÏÑ∏Ïöî."
            exit 1
        fi
    fi
}

# Docker ÏÑ§Ïπò ÌôïÏù∏
check_docker() {
    log_info "Docker ÏÑ§ÏπòÎ•º ÌôïÏù∏Ìï©ÎãàÎã§..."
    
    if command -v docker &> /dev/null; then
        DOCKER_VERSION=$(docker --version)
        log_success "DockerÍ∞Ä ÏÑ§ÏπòÎêòÏñ¥ ÏûàÏäµÎãàÎã§: $DOCKER_VERSION"
        
        # Docker Ïã§Ìñâ ÏÉÅÌÉú ÌôïÏù∏
        if docker info &> /dev/null; then
            log_success "Docker Îç∞Î™¨Ïù¥ Ïã§Ìñâ Ï§ëÏûÖÎãàÎã§."
        else
            log_warning "Docker Îç∞Î™¨Ïù¥ Ïã§ÌñâÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§. Docker DesktopÏùÑ ÏãúÏûëÌïòÏÑ∏Ïöî."
        fi
    else
        log_error "DockerÍ∞Ä ÏÑ§ÏπòÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§."
        log_info "https://www.docker.com/products/docker-desktopÏóêÏÑú Docker DesktopÏùÑ ÏÑ§ÏπòÌïòÏÑ∏Ïöî."
        exit 1
    fi
    
    if command -v docker-compose &> /dev/null; then
        COMPOSE_VERSION=$(docker-compose --version)
        log_success "Docker ComposeÍ∞Ä ÏÑ§ÏπòÎêòÏñ¥ ÏûàÏäµÎãàÎã§: $COMPOSE_VERSION"
    else
        log_error "Docker ComposeÍ∞Ä ÏÑ§ÏπòÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§."
        exit 1
    fi
}

# Git ÏÑ§Ï†ï ÌôïÏù∏
check_git() {
    log_info "Git ÏÑ§Ï†ïÏùÑ ÌôïÏù∏Ìï©ÎãàÎã§..."
    
    if command -v git &> /dev/null; then
        GIT_VERSION=$(git --version)
        log_success "GitÏù¥ ÏÑ§ÏπòÎêòÏñ¥ ÏûàÏäµÎãàÎã§: $GIT_VERSION"
        
        # Git ÏÇ¨Ïö©Ïûê ÏÑ§Ï†ï ÌôïÏù∏
        if git config user.name &> /dev/null && git config user.email &> /dev/null; then
            GIT_USER_NAME=$(git config user.name)
            GIT_USER_EMAIL=$(git config user.email)
            log_success "Git ÏÇ¨Ïö©Ïûê ÏÑ§Ï†ï: $GIT_USER_NAME <$GIT_USER_EMAIL>"
        else
            log_warning "Git ÏÇ¨Ïö©Ïûê ÏÑ§Ï†ïÏù¥ ÌïÑÏöîÌï©ÎãàÎã§."
            read -p "Git ÏÇ¨Ïö©Ïûê Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî: " git_name
            read -p "Git Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî: " git_email
            git config --global user.name "$git_name"
            git config --global user.email "$git_email"
            log_success "Git ÏÇ¨Ïö©Ïûê ÏÑ§Ï†ïÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§."
        fi
    else
        log_error "GitÏù¥ ÏÑ§ÏπòÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§. GitÏùÑ Î®ºÏ†Ä ÏÑ§ÏπòÌïòÏÑ∏Ïöî."
        exit 1
    fi
}

# ÌôòÍ≤ΩÎ≥ÄÏàò ÌååÏùº ÏÑ§Ï†ï
setup_environment_files() {
    log_info "ÌôòÍ≤ΩÎ≥ÄÏàò ÌååÏùºÏùÑ ÏÑ§Ï†ïÌï©ÎãàÎã§..."
    
    if [ ! -f ".env" ]; then
        if [ -f ".env.example" ]; then
            cp .env.example .env
            log_success ".env ÌååÏùºÏù¥ ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§."
            log_warning "‚ö†Ô∏è  .env ÌååÏùºÏóêÏÑú ÌïÑÏöîÌïú API ÌÇ§Îì§ÏùÑ ÏÑ§Ï†ïÌï¥Ï£ºÏÑ∏Ïöî:"
            echo "   - Google Maps API Key"
            echo "   - Kakao API Keys"
            echo "   - Firebase API Key"
            echo "   - Database credentials"
        else
            log_error ".env.example ÌååÏùºÏù¥ ÏóÜÏäµÎãàÎã§."
        fi
    else
        log_success ".env ÌååÏùºÏù¥ Ïù¥ÎØ∏ Ï°¥Ïû¨Ìï©ÎãàÎã§."
    fi
}

# NPM ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò
install_dependencies() {
    log_info "NPM ÏùòÏ°¥ÏÑ±ÏùÑ ÏÑ§ÏπòÌï©ÎãàÎã§..."
    
    if [ -f "package.json" ]; then
        npm install
        log_success "Î£®Ìä∏ ÌîÑÎ°úÏ†ùÌä∏ ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò ÏôÑÎ£å"
    else
        log_warning "package.json ÌååÏùºÏù¥ ÏóÜÏäµÎãàÎã§."
    fi
    
    # ÏÑúÎπÑÏä§Î≥Ñ ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò (Ìñ•ÌõÑ Ï∂îÍ∞ÄÎê† ÏòàÏ†ï)
    log_info "ÏÑúÎπÑÏä§Î≥Ñ ÏùòÏ°¥ÏÑ± ÏÑ§ÏπòÎäî Í∞Å ÏÑúÎπÑÏä§ Íµ¨ÌòÑ ÌõÑ ÏßÑÌñâÎê©ÎãàÎã§."
}

# Docker Ïª®ÌÖåÏù¥ÎÑà ÎπåÎìú Î∞è Ïã§Ìñâ
setup_docker_services() {
    log_info "Docker ÏÑúÎπÑÏä§Î•º ÏÑ§Ï†ïÌï©ÎãàÎã§..."
    
    if [ -f "docker-compose.yml" ]; then
        log_info "Docker Ïù¥ÎØ∏ÏßÄÎ•º ÎπåÎìúÌï©ÎãàÎã§..."
        docker-compose build
        
        log_info "Docker ÏÑúÎπÑÏä§Î•º ÏãúÏûëÌï©ÎãàÎã§..."
        docker-compose up -d postgres redis mongodb
        
        # Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÎåÄÍ∏∞
        log_info "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÑúÎπÑÏä§ ÏãúÏûëÏùÑ ÎåÄÍ∏∞Ìï©ÎãàÎã§..."
        sleep 10
        
        # Ïó∞Í≤∞ ÌÖåÏä§Ìä∏
        if docker-compose exec postgres pg_isready -U childcare_user -d total_childcare_sns; then
            log_success "PostgreSQL Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÏÑ±Í≥µ"
        else
            log_warning "PostgreSQL Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌïòÏÑ∏Ïöî."
        fi
        
        log_success "Docker ÏÑúÎπÑÏä§ ÏÑ§Ï†ï ÏôÑÎ£å"
        log_info "Ïã§Ìñâ Ï§ëÏù∏ ÏÑúÎπÑÏä§:"
        docker-compose ps
    else
        log_error "docker-compose.yml ÌååÏùºÏù¥ ÏóÜÏäµÎãàÎã§."
    fi
}

# Í∞úÎ∞ú ÎèÑÍµ¨ Ï∂îÏ≤ú ÏÑ§Ïπò
recommend_dev_tools() {
    log_info "üõ†Ô∏è  Ï∂îÏ≤ú Í∞úÎ∞ú ÎèÑÍµ¨Îì§:"
    echo ""
    echo "üì± Î™®Î∞îÏùº Í∞úÎ∞ú:"
    echo "  - Xcode (iOS) - App StoreÏóêÏÑú ÏÑ§Ïπò"
    echo "  - Android Studio - https://developer.android.com/studio"
    echo ""
    echo "üîß Î∞±ÏóîÎìú Í∞úÎ∞ú:"
    echo "  - VS Code - https://code.visualstudio.com/"
    echo "  - Postman - API ÌÖåÏä§Ìä∏Ïö© https://www.postman.com/"
    echo "  - TablePlus - Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Í¥ÄÎ¶¨ https://tableplus.com/"
    echo ""
    echo "üó∫Ô∏è  Í∏∞ÌÉÄ ÎèÑÍµ¨:"
    echo "  - Google Cloud Console - Google Maps API Í¥ÄÎ¶¨"
    echo "  - Kakao Developers - https://developers.kakao.com/"
    echo "  - Firebase Console - https://console.firebase.google.com/"
    echo ""
}

# API ÌÇ§ ÏÑ§Ï†ï Í∞ÄÏù¥Îìú
show_api_setup_guide() {
    log_info "üìã API ÌÇ§ ÏÑ§Ï†ï Í∞ÄÏù¥Îìú:"
    echo ""
    echo "1. Google Maps API:"
    echo "   - Google Cloud ConsoleÏóêÏÑú ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ±"
    echo "   - Maps JavaScript API, Geocoding API ÌôúÏÑ±Ìôî"
    echo "   - API ÌÇ§ ÏÉùÏÑ± ÌõÑ .env ÌååÏùºÏóê GOOGLE_MAPS_API_KEY ÏÑ§Ï†ï"
    echo ""
    echo "2. Kakao API:"
    echo "   - https://developers.kakao.com/ ÏóêÏÑú Ïï± ÏÉùÏÑ±"
    echo "   - REST API ÌÇ§ Î∞úÍ∏â ÌõÑ .env ÌååÏùºÏóê KAKAO_REST_API_KEY ÏÑ§Ï†ï"
    echo ""
    echo "3. Firebase:"
    echo "   - Firebase ConsoleÏóêÏÑú ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ±"
    echo "   - ÏÑúÎπÑÏä§ Í≥ÑÏ†ï ÌÇ§ Îã§Ïö¥Î°úÎìú"
    echo "   - .env ÌååÏùºÏóê Firebase ÏÑ§Ï†ï Ï∂îÍ∞Ä"
    echo ""
    echo "ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÄ docs/google-maps-integration.md Î¨∏ÏÑúÎ•º Ï∞∏Ï°∞ÌïòÏÑ∏Ïöî."
}

# Í∞úÎ∞ú ÏÑúÎ≤Ñ ÏãúÏûë Ïä§ÌÅ¨Î¶ΩÌä∏ ÏÉùÏÑ±
create_dev_scripts() {
    log_info "Í∞úÎ∞ú Ïä§ÌÅ¨Î¶ΩÌä∏Î•º ÏÉùÏÑ±Ìï©ÎãàÎã§..."
    
    # Í∞úÎ∞ú ÏÑúÎ≤Ñ ÏãúÏûë Ïä§ÌÅ¨Î¶ΩÌä∏
    cat > scripts/start-dev.sh << 'EOF'
#!/bin/bash
echo "üöÄ ACTCS Í∞úÎ∞ú ÏÑúÎ≤ÑÎ•º ÏãúÏûëÌï©ÎãàÎã§..."

# Docker ÏÑúÎπÑÏä§ ÏãúÏûë
docker-compose up -d

# Î∞±ÏóîÎìú ÏÑúÎπÑÏä§Îì§ ÏãúÏûë (Ìñ•ÌõÑ Íµ¨ÌòÑ)
echo "Î∞±ÏóîÎìú ÏÑúÎπÑÏä§ ÏãúÏûë Ï§ÄÎπÑ Ï§ë..."

# ÌîÑÎ°†Ìä∏ÏóîÎìú Í∞úÎ∞ú ÏÑúÎ≤Ñ ÏãúÏûë (Ìñ•ÌõÑ Íµ¨ÌòÑ)
echo "ÌîÑÎ°†Ìä∏ÏóîÎìú Í∞úÎ∞ú ÏÑúÎ≤Ñ ÏãúÏûë Ï§ÄÎπÑ Ï§ë..."

echo "‚úÖ Í∞úÎ∞ú ÌôòÍ≤ΩÏù¥ Ï§ÄÎπÑÎêòÏóàÏäµÎãàÎã§!"
echo "üìä ÎåÄÏãúÎ≥¥Îìú: http://localhost:3000"
echo "üóÑÔ∏è  Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Í¥ÄÎ¶¨: http://localhost:5050 (pgAdmin)"
echo "üî¥ Redis Í¥ÄÎ¶¨: http://localhost:8081"
EOF

    # Í∞úÎ∞ú ÏÑúÎ≤Ñ Ï§ëÏßÄ Ïä§ÌÅ¨Î¶ΩÌä∏
    cat > scripts/stop-dev.sh << 'EOF'
#!/bin/bash
echo "üõë ACTCS Í∞úÎ∞ú ÏÑúÎ≤ÑÎ•º Ï§ëÏßÄÌï©ÎãàÎã§..."

# Docker ÏÑúÎπÑÏä§ Ï§ëÏßÄ
docker-compose down

echo "‚úÖ Í∞úÎ∞ú ÏÑúÎ≤ÑÍ∞Ä Ï§ëÏßÄÎêòÏóàÏäµÎãàÎã§."
EOF

    # Ïã§Ìñâ Í∂åÌïú Î∂ÄÏó¨
    chmod +x scripts/start-dev.sh
    chmod +x scripts/stop-dev.sh
    
    log_success "Í∞úÎ∞ú Ïä§ÌÅ¨Î¶ΩÌä∏ ÏÉùÏÑ± ÏôÑÎ£å"
}

# Î©îÏù∏ Ïã§Ìñâ
main() {
    echo "üéØ ACTCS (AI for Child Total Care Solution)"
    echo "=================================="
    echo ""
    
    detect_os
    echo ""
    
    install_nodejs
    echo ""
    
    check_docker
    echo ""
    
    check_git
    echo ""
    
    setup_environment_files
    echo ""
    
    install_dependencies
    echo ""
    
    setup_docker_services
    echo ""
    
    create_dev_scripts
    echo ""
    
    recommend_dev_tools
    echo ""
    
    show_api_setup_guide
    echo ""
    
    log_success "üéâ ACTCS Í∞úÎ∞ú ÌôòÍ≤Ω ÏÑ§Ï†ïÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§!"
    echo ""
    echo "Îã§Ïùå Îã®Í≥Ñ:"
    echo "1. .env ÌååÏùºÏóêÏÑú API ÌÇ§Îì§ÏùÑ ÏÑ§Ï†ïÌïòÏÑ∏Ïöî"
    echo "2. ./scripts/start-dev.sh Ïã§ÌñâÏúºÎ°ú Í∞úÎ∞ú ÏÑúÎ≤Ñ ÏãúÏûë"
    echo "3. Î∞±ÏóîÎìú API Í∞úÎ∞ú ÏãúÏûë"
    echo "4. iOS/Android Ïï± Í∞úÎ∞ú ÏãúÏûë"
    echo ""
    echo "üí° ÎèÑÏõÄÎßê: npm run dev ÎòêÎäî ./scripts/start-dev.sh"
}

# Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ
main "$@"