# Google Cloud Platform Configuration for ACTCS
# Cloud Run, Pub/Sub, Cloud Scheduler 설정

# Cloud Run 서비스 배포 설정
apiVersion: v1
kind: ConfigMap
metadata:
  name: actcs-gcp-config
data:
  # 프로젝트 설정
  project_id: "actcs-childcare-system"
  region: "asia-northeast3"  # 서울 리전
  
  # Cloud Run 설정
  messaging_service_name: "actcs-messaging"
  auth_service_name: "actcs-auth"
  schedule_service_name: "actcs-schedule"
  location_service_name: "actcs-location"
  
  # Pub/Sub 토픽
  notification_topic: "actcs-notifications"
  location_topic: "actcs-location-updates"
  schedule_topic: "actcs-schedule-events"
  
  # Cloud Scheduler 작업
  daily_cleanup_schedule: "0 2 * * *"  # 매일 새벽 2시
  reminder_check_schedule: "* * * * *"  # 매분
  
---
# Cloud Run 메시징 서비스
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: actcs-messaging-service
  namespace: default
  labels:
    cloud.googleapis.com/location: asia-northeast3
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/maxScale: "100"
        autoscaling.knative.dev/minScale: "1"
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/execution-environment: gen2
    spec:
      containerConcurrency: 1000
      timeoutSeconds: 300
      containers:
      - image: gcr.io/actcs-childcare-system/messaging-service:latest
        ports:
        - name: http1
          containerPort: 3004
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3004"
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-config
              key: url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-config
              key: anon_key
        - name: SUPABASE_SERVICE_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-config
              key: service_key
        - name: KAKAO_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: kakao-config
              key: access_token
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-config
              key: secret
        - name: GOOGLE_CLOUD_PROJECT
          value: "actcs-childcare-system"
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 5
          timeoutSeconds: 3

---
# Cloud Pub/Sub 토픽 생성 스크립트
apiVersion: v1
kind: ConfigMap
metadata:
  name: pubsub-setup
data:
  setup.sh: |
    #!/bin/bash
    
    # Pub/Sub 토픽 생성
    gcloud pubsub topics create actcs-notifications --project=actcs-childcare-system
    gcloud pubsub topics create actcs-location-updates --project=actcs-childcare-system
    gcloud pubsub topics create actcs-schedule-events --project=actcs-childcare-system
    
    # 구독 생성
    gcloud pubsub subscriptions create messaging-notifications \
      --topic=actcs-notifications \
      --ack-deadline=30 \
      --project=actcs-childcare-system
    
    gcloud pubsub subscriptions create location-processor \
      --topic=actcs-location-updates \
      --ack-deadline=30 \
      --project=actcs-childcare-system
    
    gcloud pubsub subscriptions create schedule-processor \
      --topic=actcs-schedule-events \
      --ack-deadline=30 \
      --project=actcs-childcare-system

---
# Cloud Scheduler 작업 정의
apiVersion: v1
kind: ConfigMap
metadata:
  name: scheduler-jobs
data:
  jobs.yaml: |
    # 일정 알림 체크 (매분)
    - name: schedule-reminder-check
      schedule: "* * * * *"
      timeZone: "Asia/Seoul"
      httpTarget:
        uri: "https://actcs-messaging-asia-northeast3-actcs-childcare-system.a.run.app/api/messaging/process-scheduled"
        httpMethod: POST
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer ${INTERNAL_API_KEY}"
    
    # 위치 데이터 정리 (매일 새벽 2시)
    - name: location-data-cleanup
      schedule: "0 2 * * *"
      timeZone: "Asia/Seoul"
      httpTarget:
        uri: "https://actcs-location-asia-northeast3-actcs-childcare-system.a.run.app/api/location/cleanup"
        httpMethod: POST
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer ${INTERNAL_API_KEY}"
    
    # 메시지 큐 상태 체크 (5분마다)
    - name: message-queue-health-check
      schedule: "*/5 * * * *"
      timeZone: "Asia/Seoul"
      httpTarget:
        uri: "https://actcs-messaging-asia-northeast3-actcs-childcare-system.a.run.app/api/messaging/queue-health"
        httpMethod: GET
        headers:
          Authorization: "Bearer ${INTERNAL_API_KEY}"

---
# 시크릿 템플릿
apiVersion: v1
kind: Secret
metadata:
  name: supabase-config
type: Opaque
stringData:
  url: "https://your-project.supabase.co"
  anon_key: "your-anon-key"
  service_key: "your-service-role-key"

---
apiVersion: v1
kind: Secret
metadata:
  name: kakao-config
type: Opaque
stringData:
  access_token: "your-kakao-access-token"
  app_key: "your-kakao-app-key"

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-config
type: Opaque
stringData:
  secret: "your-jwt-secret-key"

---
# Cloud Build 설정
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudbuild-config
data:
  cloudbuild.yaml: |
    steps:
    # 메시징 서비스 빌드
    - name: 'gcr.io/cloud-builders/docker'
      args: ['build', '-t', 'gcr.io/$PROJECT_ID/messaging-service:$COMMIT_SHA', './services/messaging']
      dir: '.'
    
    # 이미지 푸시
    - name: 'gcr.io/cloud-builders/docker'
      args: ['push', 'gcr.io/$PROJECT_ID/messaging-service:$COMMIT_SHA']
    
    # Cloud Run 배포
    - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
      entrypoint: gcloud
      args:
      - 'run'
      - 'deploy'
      - 'actcs-messaging-service'
      - '--image'
      - 'gcr.io/$PROJECT_ID/messaging-service:$COMMIT_SHA'
      - '--region'
      - 'asia-northeast3'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'NODE_ENV=production'
    
    # 태그 생성
    - name: 'gcr.io/cloud-builders/docker'
      args: ['tag', 'gcr.io/$PROJECT_ID/messaging-service:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/messaging-service:latest']
    
    - name: 'gcr.io/cloud-builders/docker'
      args: ['push', 'gcr.io/$PROJECT_ID/messaging-service:latest']
    
    options:
      logging: CLOUD_LOGGING_ONLY